openapi: 3.0.0
paths:
  /v1/models:
    get:
      operationId: ModelsController_getModels_v1
      summary: List all supported models and their providers.
      description: >-
        Returns a dictionary of supported models and their providers, including
        both large language models and other AI services.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsResponseDTO'
      tags:
        - Models
  /models:
    get:
      operationId: ModelsController_getModels
      summary: List all supported models and their providers.
      description: >-
        Returns a dictionary of supported models and their providers, including
        both large language models and other AI services.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsResponseDTO'
      tags:
        - Models
  /v1/assistants:
    post:
      operationId: AssistantsController_createAssistant_v1
      summary: Create a new assistant.
      description: >-
        Creates a new AI assistant, configuring it to perform tasks based on
        predefined models and settings.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssistantDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistnatDTO'
      tags:
        - Chat Assistant
    get:
      operationId: AssistantsController_getAssistants_v1
      summary: List all available assistants.
      description: >-
        Returns a list of AI assistants that are available, allowing users to
        view and manage their virtual assistants.
      parameters:
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: before
          required: false
          in: query
          schema:
            type: string
        - name: after
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssistantsResultDTO'
      tags:
        - Chat Assistant
  /assistants:
    post:
      operationId: AssistantsController_createAssistant
      summary: Create a new assistant.
      description: >-
        Creates a new AI assistant, configuring it to perform tasks based on
        predefined models and settings.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssistantDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistnatDTO'
      tags:
        - Chat Assistant
    get:
      operationId: AssistantsController_getAssistants
      summary: List all available assistants.
      description: >-
        Returns a list of AI assistants that are available, allowing users to
        view and manage their virtual assistants.
      parameters:
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: before
          required: false
          in: query
          schema:
            type: string
        - name: after
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssistantsResultDTO'
      tags:
        - Chat Assistant
  /v1/assistants/{assistantId}:
    get:
      operationId: AssistantsController_getAssistant_v1
      summary: Get details of a specific assistant.
      description: >-
        Retrieves information about a specific assistant, including its current
        configuration and status.
      parameters:
        - name: assistantId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssistantsResultDTO'
      tags:
        - Chat Assistant
    post:
      operationId: AssistantsController_updateAssistant_v1
      summary: Update an assistant’s settings.
      description: Updates the configuration or settings of an existing assistant.
      parameters:
        - name: assistantId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssistantDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistnatDTO'
      tags:
        - Chat Assistant
    delete:
      operationId: AssistantsController_deleteAssistant_v1
      summary: Delete an assistant.
      description: Deletes an assistant, removing it from the system.
      parameters:
        - name: assistantId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssistantResultDTO'
      tags:
        - Chat Assistant
  /assistants/{assistantId}:
    get:
      operationId: AssistantsController_getAssistant
      summary: Get details of a specific assistant.
      description: >-
        Retrieves information about a specific assistant, including its current
        configuration and status.
      parameters:
        - name: assistantId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssistantsResultDTO'
      tags:
        - Chat Assistant
    post:
      operationId: AssistantsController_updateAssistant
      summary: Update an assistant’s settings.
      description: Updates the configuration or settings of an existing assistant.
      parameters:
        - name: assistantId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssistantDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistnatDTO'
      tags:
        - Chat Assistant
    delete:
      operationId: AssistantsController_deleteAssistant
      summary: Delete an assistant.
      description: Deletes an assistant, removing it from the system.
      parameters:
        - name: assistantId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssistantResultDTO'
      tags:
        - Chat Assistant
  /v1/threads/{threadId}:
    get:
      operationId: ThreadsController_getThread_v1
      summary: Get details of a specific thread.
      description: >-
        Retrieves a single thread by its ID, providing access to its details and
        messages.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDTO'
      tags:
        - Threads
    post:
      operationId: ThreadsController_updateThread_v1
      summary: Update a thread’s information.
      description: Updates the information or context of an existing thread.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDTO'
      tags:
        - Threads
    delete:
      operationId: ThreadsController_deleteThread_v1
      summary: Delete a thread.
      description: Deletes a thread, permanently removing the conversation.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThreadResultDTO'
      tags:
        - Threads
  /threads/{threadId}:
    get:
      operationId: ThreadsController_getThread
      summary: Get details of a specific thread.
      description: >-
        Retrieves a single thread by its ID, providing access to its details and
        messages.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDTO'
      tags:
        - Threads
    post:
      operationId: ThreadsController_updateThread
      summary: Update a thread’s information.
      description: Updates the information or context of an existing thread.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDTO'
      tags:
        - Threads
    delete:
      operationId: ThreadsController_deleteThread
      summary: Delete a thread.
      description: Deletes a thread, permanently removing the conversation.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThreadResultDTO'
      tags:
        - Threads
  /v1/threads:
    post:
      operationId: ThreadsController_createThread_v1
      summary: Create a new conversation thread.
      description: Creates a new thread, initiating a conversation or interaction.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDTO'
      tags:
        - Threads
  /threads:
    post:
      operationId: ThreadsController_createThread
      summary: Create a new conversation thread.
      description: Creates a new thread, initiating a conversation or interaction.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDTO'
      tags:
        - Threads
  /v1/stt:
    post:
      operationId: VoiceModelsController_speechToText_v1
      summary: Transcribe audio into text.
      description: >-
        Converts audio input to text using a speech-to-text (STT) model. This
        enables transcription services, voice commands, and other voice-driven
        interactions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeechToTextDTO'
      responses:
        '201':
          description: ''
      tags:
        - Voice Models
  /stt:
    post:
      operationId: VoiceModelsController_speechToText
      summary: Transcribe audio into text.
      description: >-
        Converts audio input to text using a speech-to-text (STT) model. This
        enables transcription services, voice commands, and other voice-driven
        interactions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeechToTextDTO'
      responses:
        '201':
          description: ''
      tags:
        - Voice Models
  /v1/tts:
    post:
      operationId: VoiceModelsController_textToSpeech_v1
      summary: Convert text into speech.
      description: >-
        Converts text into speech using a text-to-speech (TTS) model, useful for
        creating audio outputs from textual inputs for applications like voice
        assistants or accessibility tools.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToSpeechDTO'
      responses:
        '201':
          description: ''
      tags:
        - Voice Models
  /tts:
    post:
      operationId: VoiceModelsController_textToSpeech
      summary: Convert text into speech.
      description: >-
        Converts text into speech using a text-to-speech (TTS) model, useful for
        creating audio outputs from textual inputs for applications like voice
        assistants or accessibility tools.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToSpeechDTO'
      responses:
        '201':
          description: ''
      tags:
        - Voice Models
  /v2/generate/audio:
    post:
      operationId: AudioController_generateAudioByPrompt_v2
      summary: Generate audio using audio models.
      description: >-
        Generates audio based on a text prompt using audio models, useful for
        creating audio content or responses.
      parameters: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAudioByPromptDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAudioOrVideoResponseDTO'
      tags:
        - Generate an audio
    get:
      operationId: AudioController_getAudioInformation_v2
      summary: Get information about generated audio.
      description: >-
        Retrieves information about audio generated.
      parameters:
        - name: generation_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchAudioDTO'
      tags:
        - Fetch generated audio
  /v2/generate/audio/minimax/upload: 
    post: 
      operationId: "MinimaxControllerV2_uploadGeneration_v2"
      parameters: [ ]
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/Upload_Audio_Minimax"
      responses: 
        default: 
          description: ""
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/Upload_Audio_Minimax_Response"
      tags: 
      - "Minimax"
  /v2/generate/audio/minimax/generate: 
    post: 
      operationId: "MinimaxControllerV2_createGeneration_v2"
      parameters: [ ]
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/Generate_Audio_Minimax"
      responses: 
        default: 
          description: ""
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/Generate_Audio_Minimax_Response"
      tags: 
      - "Minimax"
  /v1/generate/custom-mode:
    post:
      operationId: SunoAiController_generateAudioWithCustomMode_v1
      summary: Generate audio with custom mode in Suno AI.
      description: >-
        Generates audio using a prompt with custom settings in Suno AI, allowing
        for tailored audio outputs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GenerateAudioWithCustomModeDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /generate/custom-mode:
    post:
      operationId: SunoAiController_generateAudioWithCustomMode
      summary: Generate audio with custom mode in Suno AI.
      description: >-
        Generates audio using a prompt with custom settings in Suno AI, allowing
        for tailored audio outputs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GenerateAudioWithCustomModeDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /v1/generate:
    post:
      operationId: SunoAiController_generateAudioByPrompt_v1
      summary: Generate audio using Suno AI.
      description: >-
        Generates audio based on a text prompt using Suno AI, useful for
        creating audio content or responses.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAudioSunoByPromptDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /generate:
    post:
      operationId: SunoAiController_generateAudioByPrompt
      summary: Generate audio using Suno AI.
      description: >-
        Generates audio based on a text prompt using Suno AI, useful for
        creating audio content or responses.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAudioSunoByPromptDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /v1/extend:
    post:
      operationId: SunoAiController_extendAudio_v1
      summary: Extend an audio clip using Suno AI.
      description: >-
        Extends an existing audio clip using Suno AI, allowing for seamless
        audio continuation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendAudioDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /extend:
    post:
      operationId: SunoAiController_extendAudio
      summary: Extend an audio clip using Suno AI.
      description: >-
        Extends an existing audio clip using Suno AI, allowing for seamless
        audio continuation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendAudioDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /v1:
    get:
      operationId: SunoAiController_getAudioInformation_v1
      summary: Get information about generated audio in Suno AI.
      description: >-
        Retrieves information about audio generated in Suno AI, including
        metadata and settings.
      parameters:
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /:
    get:
      operationId: SunoAiController_getAudioInformation
      summary: Get information about generated audio in Suno AI.
      description: >-
        Retrieves information about audio generated in Suno AI, including
        metadata and settings.
      parameters:
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneratedAudioSunoDTO'
      tags:
        - Suno AI
  /v1/messages:
    post:
      operationId: MessagesController_create_v1
      summary: Send a message to the model.
      description: >-
        Pushes a message to the model, allowing interaction or response
        generation in the context of an AI model.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMessageDTO'
      tags:
        - Chat Messages
  /messages:
    post:
      operationId: MessagesController_create
      summary: Send a message to the model.
      description: >-
        Pushes a message to the model, allowing interaction or response
        generation in the context of an AI model.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMessageDTO'
      tags:
        - Chat Messages
  /v1/luma-ai/generations:
    get:
      operationId: LumaController_getVideoGenerations_v1
      summary: List all user video generations in Luma AI.
      description: Returns a list of video generations created by the user in Luma AI.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoGenerationsResultDTO'
      tags:
        - Luma AI
    post:
      operationId: LumaController_generateVideo_v1
      summary: Generate a video using Luma AI.
      description: >-
        Generates a video based on a prompt using Luma AI, allowing for video
        creation from textual descriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateVideoDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateVideoResultDTO'
      tags:
        - Luma AI
  /luma-ai/generations:
    get:
      operationId: LumaController_getVideoGenerations
      summary: List all user video generations in Luma AI.
      description: Returns a list of video generations created by the user in Luma AI.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoGenerationsResultDTO'
      tags:
        - Luma AI
    post:
      operationId: LumaController_generateVideo
      summary: Generate a video using Luma AI.
      description: >-
        Generates a video based on a prompt using Luma AI, allowing for video
        creation from textual descriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateVideoDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateVideoResultDTO'
      tags:
        - Luma AI
  /v1/luma-ai/generation:
    get:
      operationId: LumaController_getVideoGenerationsByIds_v1
      summary: List video generations by IDs in Luma AI.
      description: Returns a list of video generations by their IDs in Luma AI.
      parameters:
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoGenerationsByIdsResultDTO'
      tags:
        - Luma AI
  /luma-ai/generation:
    get:
      operationId: LumaController_getVideoGenerationsByIds
      summary: List video generations by IDs in Luma AI.
      description: Returns a list of video generations by their IDs in Luma AI.
      parameters:
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoGenerationsByIdsResultDTO'
      tags:
        - Luma AI
  /v1/luma-ai/generations/{taskId}/extend:
    post:
      operationId: LumaController_extendVideo_v1
      summary: Extend a video using Luma AI.
      description: >-
        Extends an existing video using Luma AI, creating additional content for
        video projects.
      parameters:
        - name: taskId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendVideoDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendVideoResultDTO'
      tags:
        - Luma AI
  /luma-ai/generations/{taskId}/extend:
    post:
      operationId: LumaController_extendVideo
      summary: Extend a video using Luma AI.
      description: >-
        Extends an existing video using Luma AI, creating additional content for
        video projects.
      parameters:
        - name: taskId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendVideoDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendVideoResultDTO'
      tags:
        - Luma AI
  /v1/luma-ai/generations/file-upload:
    post:
      operationId: LumaController_uploadImage_v1
      summary: Upload an image for processing in Luma AI.
      description: >-
        Uploads an image for further processing in Luma AI, typically for 3D
        modeling or video generation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadImageDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImageResultDTO'
      tags:
        - Luma AI
  /luma-ai/generations/file-upload:
    post:
      operationId: LumaController_uploadImage
      summary: Upload an image for processing in Luma AI.
      description: >-
        Uploads an image for further processing in Luma AI, typically for 3D
        modeling or video generation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadImageDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImageResultDTO'
      tags:
        - Luma AI
  /v2/generate/video/kling/generation:
    post:
      operationId: videoKlingGeneration
      summary: Create a video by kling
      description: >-
        Create a video from text or image using Kling
      parameters: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateVideoByTextOrImageKlingDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAudioOrVideoResponseDTO'
      tags:
        - Generate a video by Kling
    get:
      operationId: VideoController_getVideoInformation_v2
      summary: Get information about generated Kling video.
      description: >-
        Retrieves information about video generated.
      parameters:
        - name: generation_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchVideoDTO'
      tags:
        - Fetch generated video
  /v1/ocr:
    post:
      operationId: DocumentModelsController_processOCRRequest_v1
      summary: Extract text from images using OCR.
      description: >-
        Performs optical character recognition (OCR) to extract text from
        images, enabling text-based analysis, data extraction, and automation
        workflows from visual data.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRRequestDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OCRResponseDTO'
      tags:
        - Vision Models
  /ocr:
    post:
      operationId: DocumentModelsController_processOCRRequest
      summary: Extract text from images using OCR.
      description: >-
        Performs optical character recognition (OCR) to extract text from
        images, enabling text-based analysis, data extraction, and automation
        workflows from visual data.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OCRRequestDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OCRResponseDTO'
      tags:
        - Vision Models
  /v1/vision:
    post:
      operationId: DocumentModelsController_processVisionRequest_v1
      summary: Identify visual features in images.
      description: >-
        Performs optical feature recognition (OFR) to identify visual features
        such as objects, landmarks, or logos from images, aiding in image
        analysis and categorization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisionRequestDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisionResponseDTO'
      tags:
        - Vision Models
  /vision:
    post:
      operationId: DocumentModelsController_processVisionRequest
      summary: Identify visual features in images.
      description: >-
        Performs optical feature recognition (OFR) to identify visual features
        such as objects, landmarks, or logos from images, aiding in image
        analysis and categorization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisionRequestDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisionResponseDTO'
      tags:
        - Vision Models
  /v1/chat/completions:
    post:
      operationId: LlmModelsController_completeChat_v1
      summary: Generate a conversational response using a language model.
      description: >-
        Creates a chat completion using a language model, allowing interactive
        conversation by predicting the next response based on the given chat
        history. This is useful for AI-driven dialogue systems and virtual
        assistants.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCompleteChatDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCompleteChatResultDTO'
      tags:
        - Chat Completions
  /chat/completions:
    post:
      operationId: LlmModelsController_completeChat
      summary: Generate a conversational response using a language model.
      description: >-
        Creates a chat completion using a language model, allowing interactive
        conversation by predicting the next response based on the given chat
        history. This is useful for AI-driven dialogue systems and virtual
        assistants.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCompleteChatDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCompleteChatResultDTO'
      tags:
        - Chat Completions
  /v1/completions:
    post:
      operationId: LlmModelsController_completeLanguage_v1
      summary: Generate a text completion based on the input prompt.
      description: >-
        Creates a text completion using a language model, generating the most
        likely continuation of the given text input. This is useful for tasks
        like auto-completion, summarization, or content generation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteLanguageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCompletionDTO'
      tags:
        - Chat Completions
  /completions:
    post:
      operationId: LlmModelsController_completeLanguage
      summary: Generate a text completion based on the input prompt.
      description: >-
        Creates a text completion using a language model, generating the most
        likely continuation of the given text input. This is useful for tasks
        like auto-completion, summarization, or content generation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteLanguageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCompletionDTO'
      tags:
        - Chat Completions
  /v1/images/generations:
    post:
      operationId: ImageModelsController_generateImage_v1
      summary: Generate an image from a text prompt.
      description: >-
        Generates an image based on a prompt using a model, typically leveraging
        generative AI models like DALL-E for image synthesis from text
        descriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseGenerateImageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseGenerateImageResultDTO'
      tags:
        - Images
  /images/generations:
    post:
      operationId: ImageModelsController_generateImage
      summary: Generate an image from a text prompt.
      description: >-
        Generates an image based on a prompt using a model, typically leveraging
        generative AI models like DALL-E for image synthesis from text
        descriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseGenerateImageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseGenerateImageResultDTO'
      tags:
        - Images
  /v1/images/generations/with-url:
    post:
      operationId: ImageModelsController_generateImageWithURL_v1
      summary: Generate an image and upload it to a URL.
      deprecated: true
      description: >-
        Generates an image based on a prompt and uploads the generated image to
        a URL. This is useful for automated workflows that require direct image
        upload after generation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseGenerateImageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResultDTO'
      tags:
        - Images
  /images/generations/with-url:
    post:
      operationId: ImageModelsController_generateImageWithURL
      summary: Generate an image and upload it to a URL.
      deprecated: true
      description: >-
        Generates an image based on a prompt and uploads the generated image to
        a URL. This is useful for automated workflows that require direct image
        upload after generation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseGenerateImageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateImageResultDTO'
      tags:
        - Images
  /api-keys:
    post:
      operationId: ApiKeysController_createAPIKey
      summary: Generate a new API key.
      description: >-
        Creates a new API key for the account, enabling secure access to the
        API.
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
      tags:
        - API Key Management
    get:
      operationId: ApiKeysController_getAPIKeys
      summary: List all API keys associated with the account.
      description: >-
        Retrieves a list of API keys associated with the account, allowing for
        management of API access tokens.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIKey'
      tags:
        - API Key Management
  /api-keys/{id}/disable:
    put:
      operationId: ApiKeysController_disableAPIKey
      summary: Disable an API key.
      description: Disables an API key, preventing further use and access to the API.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - API Key Management
  /api-keys/{id}/enable:
    put:
      operationId: ApiKeysController_enableAPIKey
      summary: Enable a disabled API key.
      description: >-
        Enables a previously disabled API key, restoring its functionality and
        access.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - API Key Management
  /v1/embeddings:
    post:
      operationId: EmbeddingsController_createEmbeddings_v1
      summary: Create embeddings for text input.
      description: >-
        Generates embeddings for text input, used in tasks such as semantic
        search or clustering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCreateEmbeddingsDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCreateEmbeddingsResultDTO'
      tags:
        - Embeddings
  /embeddings:
    post:
      operationId: EmbeddingsController_createEmbeddings
      summary: Create embeddings for text input.
      description: >-
        Generates embeddings for text input, used in tasks such as semantic
        search or clustering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCreateEmbeddingsDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCreateEmbeddingsResultDTO'
      tags:
        - Embeddings
  /v1/threads/{threadId}/runs:
    get:
      operationId: ThreadRunsController_getThreadRuns_v1
      summary: List all thread runs.
      description: >-
        Returns a list of thread runs, which represent individual executions or
        interactions within a thread.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
    post:
      operationId: ThreadRunsController_createRun_v1
      summary: Create a new thread run.
      description: >-
        Creates a new thread run, executing a task or interaction within a
        thread context.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadRunDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
  /threads/{threadId}/runs:
    get:
      operationId: ThreadRunsController_getThreadRuns
      summary: List all thread runs.
      description: >-
        Returns a list of thread runs, which represent individual executions or
        interactions within a thread.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
    post:
      operationId: ThreadRunsController_createRun
      summary: Create a new thread run.
      description: >-
        Creates a new thread run, executing a task or interaction within a
        thread context.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadRunDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
  /v1/threads/{threadId}/runs/{runId}:
    get:
      operationId: ThreadRunsController_getThreadRun_v1
      summary: Get details of a specific thread run.
      description: >-
        Retrieves a single thread run by its ID, providing access to its
        execution details.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: runId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
    post:
      operationId: ThreadRunsController_updateThreadRun_v1
      summary: Update a thread run’s details.
      description: Updates the details of a thread run, modifying its status or context.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: runId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadRunDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
  /threads/{threadId}/runs/{runId}:
    get:
      operationId: ThreadRunsController_getThreadRun
      summary: Get details of a specific thread run.
      description: >-
        Retrieves a single thread run by its ID, providing access to its
        execution details.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: runId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
    post:
      operationId: ThreadRunsController_updateThreadRun
      summary: Update a thread run’s details.
      description: Updates the details of a thread run, modifying its status or context.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: runId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadRunDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDTO'
      tags:
        - Thread Runs
  /v1/threads/{threadId}/messages:
    get:
      operationId: ThreadMessagesController_getThreadMessages_v1
      summary: List all messages in a thread.
      description: >-
        Returns a list of messages within a thread, allowing users to view the
        conversation flow.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: before
          required: false
          in: query
          schema:
            type: string
        - name: after
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
    post:
      operationId: ThreadMessagesController_createThreadMessage_v1
      summary: Create a new message in a thread.
      description: Creates a new message within a thread, contributing to the conversation.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadMessageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
  /threads/{threadId}/messages:
    get:
      operationId: ThreadMessagesController_getThreadMessages
      summary: List all messages in a thread.
      description: >-
        Returns a list of messages within a thread, allowing users to view the
        conversation flow.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: before
          required: false
          in: query
          schema:
            type: string
        - name: after
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
    post:
      operationId: ThreadMessagesController_createThreadMessage
      summary: Create a new message in a thread.
      description: Creates a new message within a thread, contributing to the conversation.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThreadMessageDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
  /v1/threads/{threadId}/messages/{messageId}:
    get:
      operationId: ThreadMessagesController_getThreadMessage_v1
      summary: Get details of a specific message.
      description: Retrieves a single message from a thread by its ID.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: messageId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
    post:
      operationId: ThreadMessagesController_updateThreadMessage_v1
      summary: Update a message in a thread.
      description: Updates an existing message in a thread.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: messageId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadMessageDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
  /threads/{threadId}/messages/{messageId}:
    get:
      operationId: ThreadMessagesController_getThreadMessage
      summary: Get details of a specific message.
      description: Retrieves a single message from a thread by its ID.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: messageId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
    post:
      operationId: ThreadMessagesController_updateThreadMessage
      summary: Update a message in a thread.
      description: Updates an existing message in a thread.
      parameters:
        - name: threadId
          required: true
          in: path
          schema:
            type: string
        - name: messageId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadMessageDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
      tags:
        - Thread Messages
info:
  title: AI/ML Gateway
  description: ''
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: https://api.aimlapi.com
    description: AI/ML API server
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    ModelsResponseDTO:
      type: object
      additionalProperties:
        type: string
    CreateAssistantDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        model:
          type: string
        instructions:
          type: string
        metadata:
          type: object
      required:
        - name
        - description
        - model
    AssistnatDTO:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: number
        description:
          type: string
          nullable: true
        instructions:
          type: string
          nullable: true
        metadata:
          nullable: true
        model:
          type: string
        name:
          type: string
          nullable: true
        object:
          type: string
          enum:
            - assistant
        tools:
          type: array
          items:
            $ref: '#/components/schemas/AssistantTool'
        response_format:
          anyOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - json_schema
                json_schema:
                  type: object
                  properties: {}
              required:
                - type
                - json_schema
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - json_object
              required:
                - type
            - nullable: true
        temperature:
          type: number
          nullable: true
          minimum: 0
          maximum: 2
        tool_resources:
          $ref: '#/components/schemas/ThreadToolResources'
        top_p:
          type: number
          nullable: true
          minimum: 0
          maximum: 1
      required:
        - id
        - created_at
        - description
        - instructions
        - model
        - name
        - object
        - tools
    AssistantTool: {}
    ThreadToolResources: {}
    GetAssistantsResultDTO:
      type: object
      properties:
        object:
          type: string
          enum:
            - list
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssistnatDTO'
      required:
        - object
        - data
    UpdateAssistantDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        model:
          type: string
        instructions:
          type: string
        metadata:
          type: object
    DeleteAssistantResultDTO:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          enum:
            - assistant.deleted
        deleted:
          type: boolean
      required:
        - id
        - object
        - deleted
    ThreadDTO:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: number
        metadata:
          nullable: true
        object:
          type: string
          enum:
            - thread
        tool_resources:
          $ref: '#/components/schemas/ToolResourcesDTO'
      required:
        - id
        - created_at
        - object
        - tool_resources
    ToolResourcesDTO:
      type: object
      properties:
        code_interpreter:
          $ref: '#/components/schemas/CodeInterpreterDTO'
        file_search:
          $ref: '#/components/schemas/FileSearchDTO'
    CodeInterpreterDTO:
      type: object
      properties:
        file_ids:
          type: array
          items:
            type: string
    FileSearchDTO:
      type: object
      properties:
        vector_store_ids:
          type: array
          items:
            type: string
    CreateThreadDTO:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        metadata:
          type: object
      required:
        - messages
    UpdateThreadDTO:
      type: object
      properties:
        metadata:
          type: object
    DeleteThreadResultDTO:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          enum:
            - thread.deleted
        deleted:
          type: boolean
      required:
        - id
        - object
        - deleted
    SpeechToTextDTO:
      type: object
      properties:
        model:
          type: string
        url:
          type: string
        audio:
          type: object
        custom_intent:
          type: object
        custom_topic:
          type: object
        custom_intent_mode:
          type: string
        custom_topic_mode:
          type: string
        detect_language:
          type: boolean
        detect_entities:
          type: boolean
        detect_topics:
          type: boolean
        diarize:
          type: boolean
        dictation:
          type: boolean
        diarize_version:
          type: string
        extra:
          type: string
        filler_words:
          type: boolean
        intents:
          type: boolean
        keywords:
          type: string
        language:
          type: string
        measurements:
          type: boolean
        multi_channel:
          type: boolean
        numerals:
          type: boolean
        paragraphs:
          type: boolean
        profanity_filter:
          type: boolean
        punctuate:
          type: boolean
        search:
          type: string
        sentiment:
          type: boolean
        smart_format:
          type: boolean
        summarize:
          type: string
        tag:
          type: array
          items:
            type: string
        topics:
          type: boolean
        utterances:
          type: boolean
        utt_split:
          type: number
      required:
        - model
    TextToSpeechDTO:
      type: object
      properties:
        model:
          type: string
        text:
          type: string
        container:
          type: string
        encoding:
          type: string
        sample_rate:
          type: string
      required:
        - model
        - text
    GenerateAudioWithCustomModeDTO:
      type: object
      properties:
        prompt:
          type: string
        tags:
          type: string
        title:
          type: string
        make_instrumental:
          type: boolean
        wait_audio:
          type: boolean
      required:
        - prompt
        - tags
        - title
        - make_instrumental
        - wait_audio
    GeneratedAudioSunoDTO:
      type: object
      properties:
        image_url:
          type: string
          format: uri
        audio_url:
          type: string
          format: uri
        video_url:
          type: string
          format: uri
      required:
        - image_url
        - audio_url
        - video_url
    GenerateAudioSunoByPromptDTO:
      type: object
      properties:
        prompt:
          type: string
        make_instrumental:
          type: boolean
        wait_audio:
          type: boolean
      required:
        - prompt
        - make_instrumental
        - wait_audio
    ExtendAudioDTO:
      type: object
      properties:
        audio_id:
          type: string
        prompt:
          type: string
        continue_at:
          type: string
        title:
          type: string
        tags:
          type: string
      required:
        - audio_id
        - prompt
        - continue_at
        - title
        - tags
    GenerateVideoByTextOrImageKlingDTO:
      type: object
      properties:
        model:
          type: string
          enum:
            - kling-video/v1/standard/text-to-video
            - kling-video/v1/pro/text-to-video
            - kling-video/v1/standard/image-to-video
            - kling-video/v1/pro/image-to-video
        prompt:
          type: string
        image_url:
          type: string
          format: uri
          example: https://s2-111386.kwimgs.com/bs2/mmu-aiplatform-temp/kling/20240620/1.jpeg
        aspect_ratio:
          type: string
          enum:
            - 16:9
            - 9:16
            - 1:1
          default: 16:9
        duration:
          type: string
          enum:
            - 5
            - 10
          default: 5
      required:
        - model
        - prompt
    FetchVideoDTO:
      type: object
      properties:
        id:
          type: string
        status:
          enum:
            - generating
            - queued
            - completed
        video:
          type: object
          properties:
            url:
              type: string
              format: uri
            content_type:
              type: string
            file_name:
              type: string
            file_size:
              type: number
      required:
        - id
        - status
    GenerateAudioByPromptStableAudioDTO:
      properties:
        model:
          type: string
          enum:
            - stable-audio
        prompt:
          type: string
        seconds_start:
          type: number
          minimum: 1
          maximum: 47
          description: The start point of the audio clip to generate
        seconds_total:
          type: number
          minimum: 1
          maximum: 47
          default: 30
          description: The duration of the audio clip to generate
        steps:
          type: number
          minimum: 1
          maximum: 1000
          default: 100
          description: The number of steps to denoise the audio
      required:
        - model
        - prompt
    GenerateAudioByPromptMinimaxDTO:
      properties:
        model:
          type: string
          enum:
            - minimax-music
        prompt:
          type: string
        reference_audio_url:
          type: string
          format: uri
          description: Reference song, should contain music and vocals. Must be a .wav or .mp3 file longer than 15 seconds
      required:
        - model
        - prompt
        - reference_audio_url
    GenerateAudioByPromptDTO:
      anyOf:
        - $ref: '#/components/schemas/GenerateAudioByPromptStableAudioDTO'
        - $ref: '#/components/schemas/GenerateAudioByPromptMinimaxDTO'
    Upload_Audio_Minimax: 
      type: "object"
      properties: 
        file: 
          description: "Audio file path, supports WAV and MP3 formats. The audio duration must be longer than 10s and no more than 10 minutes."
        purpose: 
          type: "string"
          enum: 
          - "song"
          - "voice"
          - "instrumental"
          description: |
            1. If purpose is song:
              - You need to upload a music file containing both acapella (vocals) and accompaniment.
              - The acapella must be in singing form; normal speech is not supported.
              - Outputs: voice_id and instrumental_id.
            2. If purpose is voice:
              - You need to upload a file containing only acapella in singing form (normal speech audio is not supported).
              - Output: voice_id.
            3. If purpose is instrumental:
              - You need to upload a file containing only accompaniment.
              - Output: instrumental_id.
      required: 
      - "purpose"
    Upload_Audio_Minimax_Response: 
      type: "object"
      properties: 
        voice_id: 
          type: "string"
          description: "The voice_id will only be returned when the purpose is song or voice."
          example: "vocal-2025011003141025-d5ZEMxmp"
        instrumental_id: 
          type: "string"
          description: "The instrumental_id will only be returned when the purpose is song or instrumental."
          example: "instrumental-2025011003141125-Akz9eWnD"
        base_resp: 
          type: "object"
          properties: 
            status_code: 
              type: "integer"
            status_msg: 
              type: "string"
          required: 
          - "status_code"
          - "status_msg"
      required: 
      - "base_resp"
      additionalProperties: false
    Generate_Audio_Minimax: 
      type: "object"
      properties: 
        refer_voice: 
          type: "string"
          description: "At least one of refer_voice or refer_instrumental is required. When only refer_voice is provided, the system can still output music data. The generated music will be an a cappella vocal hum that aligns with the provided refer_voice and the generated lyrics, without any instrumental accompaniment."
          example: "vocal-2025010100000000-a0AAAaaa"
        refer_instrumental: 
          type: "string"
          description: "At least one of refer_voice or refer_instrumental is required. When only refer_instrumental is provided, the system can still output music data. The generated music will be a purely instrumental track that aligns with the provided refer_instrumental, without any vocals."
          example: "instrumental-2025010100000000-Aaa0aAaA"
        lyrics: 
          type: "string"
          description: |
            "You can use a newline character (\n) to separate each line of lyrics.
            You can use two consecutive newline characters (\n\n) to add a pause between lines.
            You can use double hash marks (##) at the beginning and end of the lyrics to add accompaniment."
          example: "##Swift and Boundless \nIn the realm of innovation, where visions align, \n\nAIML API's the name, making tech shine. \nIntelligent solutions, breaking the mold, \n\nSwift inference power, bold and untold.##"
        model: 
          type: "string"
          enum: 
          - "music-01"
          description: "Model id"
        audio_setting: 
          type: "object"
          properties: 
            sample_rate: 
              anyOf: 
              - type: "number"
                enum: 
                - "16000"
              - type: "number"
                enum: 
                - "24000"
              - type: "number"
                enum: 
                - "32000"
              - type: "number"
                enum: 
                - "44100"
              description: "The sampling rate of the generated music"
            bitrate: 
              anyOf: 
              - type: "number"
                enum: 
                - "32000"
              - type: "number"
                enum: 
                - "64000"
              - type: "number"
                enum: 
                - "128000"
              - type: "number"
                enum: 
                - "256000"
              description: "The bit rate of the generated music"
            format: 
              type: "string"
              enum: 
              - "mp3"
              - "wav"
              - "pcm"
              description: "The format of the generated music"
          required: 
          - "sample_rate"
          - "bitrate"
          - "format"
      required: 
      - "lyrics"
      - "model"
    Generate_Audio_Minimax_Response: 
      type: "object"
      properties: 
        data: 
          type: "object"
          properties: 
            status: 
              type: "integer"
              description: "Music generation status. 1: In progress; 2: Completed."
            audio: 
              type: "string"
              description: "Hex-encoded audio data. Currently, can generate music with a duration of no more than 1 minute."
          required: 
          - "status"
          - "audio"
        extra_info: 
          type: "object"
          properties: 
            audio_length: 
              type: "integer"
            audio_size: 
              type: "integer"
            audio_bitrate: 
              type: "integer"
            audio_sample_rate: 
              type: "integer"
          required: 
          - "audio_length"
          - "audio_size"
          - "audio_bitrate"
          - "audio_sample_rate"
        trace_id: 
          type: "string"
        base_resp: 
          type: "object"
          properties: 
            status_code: 
              type: "integer"
            status_msg: 
              type: "string"
          required: 
          - "status_code"
          - "status_msg"
      required: 
      - "base_resp"
    GenerateAudioOrVideoResponseDTO:
      type: object
      properties:
        generation_id:
          type: string
      required:
        - generation_id
    FetchAudioDTO:
      type: object
      properties:
        id:
          type: string
        status:
          enum:
            - generating
            - queued
            - completed
        audio_file:
          type: object
          properties:
            url:
              type: string
              format: uri
            content_type:
              type: string
            file_name:
              type: string
            file_size:
              type: number
      required:
        - id
        - status
    CreateMessageDTO:
      type: object
      properties:
        model:
          type: string
          enum:
            - claude-3-5-sonnet-20240620
            - claude-3-opus-20240229
            - claude-3-sonnet-20240229
            - claude-3-haiku-20240307
        messages:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
                enum:
                  - user
                  - assistant
              content:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - text
                            text:
                              type: string
                          required:
                            - type
                            - text
                          additionalProperties: false
                        - type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - image
                            source:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - base64
                                media_type:
                                  type: string
                                  enum:
                                    - image/jpeg
                                    - image/png
                                    - image/gif
                                    - image/webp
                                data:
                                  type: string
                              required:
                                - type
                                - media_type
                                - data
                          required:
                            - type
                            - source
                          additionalProperties: false
                    maxItems: 5
            required:
              - role
              - content
            additionalProperties: false
        max_tokens:
          type: number
          default: 512
        metadata:
          type: object
          additionalProperties:
            type: string
        stop_sequences:
          type: array
          items:
            type: string
        stream:
          type: boolean
          default: false
        system:
          type: string
        temperature:
          type: number
          minimum: 0
          maximum: 1
          default: 1
        tool_choice:
          anyOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - auto
                    - any
              required:
                - type
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - tool
                name:
                  type: string
              required:
                - type
                - name
        tools:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
                nullable: true
              input_schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - object
                  properties:
                    type: object
                    nullable: true
                    additionalProperties:
                      nullable: true
                required:
                  - type
                additionalProperties: false
            required:
              - name
              - input_schema
            additionalProperties: false
        top_k:
          type: number
        top_p:
          type: number
      required:
        - model
        - messages
      additionalProperties: false
    GetVideoGenerationsResultDTO:
      type: array
      items:
        type: object
        properties:
          luma_generation_id:
            type: string
          prompt:
            type: string
        required:
          - luma_generation_id
    GetVideoGenerationsByIdsResultDTO:
      type: array
      items:
        $ref: '#/components/schemas/GenerateVideoResultDTO'
    GenerateVideoResultDTO:
      type: object
      properties:
        created_at:
          type: string
        estimate_wait_seconds:
          type: string
        id:
          type: string
        liked:
          type: string
        prompt:
          type: string
        state:
          type: string
        video:
          $ref: '#/components/schemas/VideoDTO'
      required:
        - created_at
        - estimate_wait_seconds
        - id
        - liked
        - prompt
        - state
        - video
    VideoDTO:
      type: object
      properties:
        height:
          type: number
        width:
          type: number
        thumbnail:
          type: string
        url:
          type: string
      required:
        - height
        - width
        - thumbnail
        - url
    GenerateVideoDTO:
      type: object
      properties:
        aspect_ratio:
          type: string
          description: The aspect ratio of the image
          example: '16:9'
        expand_prompt:
          type: boolean
          description: Whether to expand the prompt
          example: true
        image_end_url:
          type: string
          description: The URL for the end of the image
          example: https://example.com/image-end.jpg
        image_url:
          type: string
          description: The URL of the main image
          example: https://example.com/main-image.jpg
        user_prompt:
          type: string
          description: The user-provided prompt for image generation
          example: A beautiful sunset over the ocean
      required:
        - aspect_ratio
        - expand_prompt
        - image_end_url
        - image_url
        - user_prompt
    ExtendVideoDTO:
      type: object
      properties:
        aspect_ratio:
          type: string
          description: The aspect ratio of the image
          example: '16:9'
        expand_prompt:
          type: boolean
          description: Whether to expand the prompt
          example: true
        image_end_url:
          type: string
          description: The URL for the end of the image
          example: https://example.com/image-end.jpg
        image_url:
          type: string
          description: The URL of the main image
          example: https://example.com/main-image.jpg
        user_prompt:
          type: string
          description: The user-provided prompt for image generation
          example: A beautiful sunset over the ocean
      required:
        - aspect_ratio
        - expand_prompt
        - image_end_url
        - image_url
        - user_prompt
    ExtendVideoResultDTO:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
        estimate_wait_seconds:
          type: string
        liked:
          type: string
        prompt:
          type: string
        state:
          type: string
        video:
          $ref: '#/components/schemas/VideoDTO'
      required:
        - id
        - created_at
        - estimate_wait_seconds
        - liked
        - prompt
        - state
        - video
    UploadImageDTO:
      type: object
      properties:
        url:
          type: string
      required:
        - url
    UploadImageResultDTO:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          presigned_url:
            type: string
            format: uri
          public_url:
            type: string
            format: uri
        required:
          - id
          - presigned_url
          - public_url
    OCRRequestDTO:
      type: object
      properties:
        document:
          anyOf:
            - type: string
              format: uri
            - type: string
          description: Document URL
        mimeType:
          type: string
          enum:
            - application/pdf
            - image/gif
            - image/tiff
            - image/jpeg
            - image/png
            - image/bmp
            - image/webp
            - text/html
          description: Mime type of the provided document
      required:
        - document
      additionalProperties: false
    OCRResponseDTO:
      type: object
      properties:
        uri:
          type: string
          nullable: true
        content:
          anyOf:
            - type: string
            - {}
            - nullable: true
        mimeType:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        textStyles:
          type: array
          nullable: true
          items:
            nullable: true
        pages:
          type: array
          nullable: true
          items:
            nullable: true
        entities:
          type: array
          nullable: true
          items:
            nullable: true
        entityRelations:
          type: array
          nullable: true
          items:
            nullable: true
        textChanges:
          type: array
          nullable: true
          items:
            nullable: true
        shardInfo:
          nullable: true
        error:
          nullable: true
        revisions:
          type: array
          nullable: true
          items:
            nullable: true
        documentLayout:
          nullable: true
        chunkedDocument:
          nullable: true
    VisionRequestDTO:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/VisionRequestImageDTO'
        features:
          type: array
          items:
            $ref: '#/components/schemas/VisionFeatureDTO'
        imageContext:
          $ref: '#/components/schemas/VisionImageContextDTO'
      required:
        - image
        - features
      additionalProperties: false
    VisionRequestImageDTO:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/VisionImageSource'
      required:
        - source
      additionalProperties: false
    VisionImageSource:
      type: object
      properties:
        imageUri:
          type: string
      required:
        - imageUri
      additionalProperties: false
    VisionFeatureDTO:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/VisionFeatures'
        maxResults:
          type: number
          default: 1
          description: >-
            The maximum number of results to return for this feature. If not
            specified, defaults to 1.
        model:
          type: string
          enum:
            - builtin/stable
            - builtin/latest
          default: builtin/stable
          description: >-
            Specifies which model to use for recognition. Defaults to the
            "builtin/stable" model.
      required:
        - type
      additionalProperties: false
    VisionFeatures:
      type: string
      enum:
        - FACE_DETECTION
        - LANDMARK_DETECTION
        - LOGO_DETECTION
        - LABEL_DETECTION
        - TEXT_DETECTION
        - DOCUMENT_TEXT_DETECTION
        - SAFE_SEARCH_DETECTION
        - IMAGE_PROPERTIES
        - CROP_HINTS
        - WEB_DETECTION
        - PRODUCT_SEARCH
        - OBJECT_LOCALIZATION
    VisionImageContextDTO:
      type: object
      properties:
        latLongRect:
          type: object
          properties:
            minLatLng:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
              required:
                - latitude
                - longitude
              additionalProperties: false
            maxLatLng:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
              required:
                - latitude
                - longitude
              additionalProperties: false
          required:
            - minLatLng
            - maxLatLng
          additionalProperties: false
        languageHints:
          type: array
          items:
            type: string
        cropHintsParams:
          type: object
          properties:
            aspectRatios:
              type: array
              items:
                type: number
          required:
            - aspectRatios
          additionalProperties: false
        faceRecognitionParams:
          type: object
          properties:
            celebritySet:
              type: array
              items:
                type: string
          required:
            - celebritySet
          additionalProperties: false
        textDetectionParams:
          type: object
          properties:
            enableTextDetectionConfidenceScore:
              type: boolean
          required:
            - enableTextDetectionConfidenceScore
          additionalProperties: false
      additionalProperties: false
    VisionResponseDTO:
      type: object
      properties:
        faceAnnotations:
          type: array
          nullable: true
          items:
            nullable: true
        landmarkAnnotations:
          type: array
          nullable: true
          items:
            nullable: true
        logoAnnotations:
          type: array
          nullable: true
          items:
            nullable: true
        labelAnnotations:
          type: array
          nullable: true
          items:
            nullable: true
        localizedObjectAnnotations:
          type: array
          nullable: true
          items:
            nullable: true
        textAnnotations:
          type: array
          nullable: true
          items:
            nullable: true
        fullTextAnnotation:
          nullable: true
        safeSearchAnnotation:
          nullable: true
        imagePropertiesAnnotation:
          nullable: true
        cropHintsAnnotation:
          nullable: true
        webDetection:
          nullable: true
        productSearchResults:
          nullable: true
        error:
          nullable: true
        context:
          nullable: true
    BaseCompleteChatDTO:
      oneOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
                - open-source
              default: open-source
            model:
              type: string
              enum:
                - WizardLM/WizardLM-13B-V1.2
                - codellama/CodeLlama-34b-Instruct-hf
                - upstage/SOLAR-10.7B-Instruct-v1.0
                - meta-llama/Llama-3-70b-chat-hf
                - teknium/OpenHermes-2-Mistral-7B
                - mistralai/Mixtral-8x7B-v0.1
                - togethercomputer/Llama-2-7B-32K-Instruct
                - Undi95/ReMM-SLERP-L2-13B
                - meta-llama/Meta-Llama-Guard-3-8B
                - Undi95/Toppy-M-7B
                - Phind/Phind-CodeLlama-34B-v2
                - meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo
                - openchat/openchat-3.5-1210
                - Austism/chronos-hermes-13b
                - snorkelai/Snorkel-Mistral-PairRM-DPO
                - Qwen/Qwen1.5-7B-Chat
                - Qwen/Qwen1.5-14B-Chat
                - Qwen/Qwen1.5-1.8B-Chat
                - Snowflake/snowflake-arctic-instruct
                - codellama/CodeLlama-13b-Python-hf
                - NousResearch/Nous-Hermes-2-Mixtral-8x7B-SFT
                - NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO
                - deepseek-ai/deepseek-coder-33b-instruct
                - codellama/CodeLlama-34b-Python-hf
                - NousResearch/Nous-Hermes-Llama2-13b
                - lmsys/vicuna-13b-v1.5
                - Qwen/Qwen1.5-0.5B-Chat
                - codellama/CodeLlama-70b-Python-hf
                - codellama/CodeLlama-7b-Instruct-hf
                - NousResearch/Nous-Hermes-2-Yi-34B
                - codellama/CodeLlama-13b-Instruct-hf
                - meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo
                - togethercomputer/Llama-3-8b-chat-hf-int4
                - teknium/OpenHermes-2p5-Mistral-7B
                - NousResearch/Nous-Capybara-7B-V1p9
                - WizardLM/WizardCoder-Python-34B-V1.0
                - NousResearch/Nous-Hermes-2-Mistral-7B-DPO
                - togethercomputer/StripedHyena-Nous-7B
                - togethercomputer/alpaca-7b
                - garage-bAInd/Platypus2-70B-instruct
                - google/gemma-2b-it
                - google/gemma-7b-it
                - allenai/OLMo-7B-Instruct
                - Qwen/Qwen1.5-4B-Chat
                - Gryphe/MythoMax-L2-13b
                - Gryphe/MythoMax-L2-13b-Lite
                - meta-llama/LlamaGuard-2-8b
                - mistralai/Mistral-7B-Instruct-v0.1
                - mistralai/Mistral-7B-Instruct-v0.2
                - meta-llama/Meta-Llama-3-8B
                - mistralai/Mistral-7B-v0.1
                - Open-Orca/Mistral-7B-OpenOrca
                - NousResearch/Nous-Hermes-llama-2-7b
                - Qwen/Qwen1.5-32B-Chat
                - Qwen/Qwen2-72B-Instruct
                - Qwen/Qwen1.5-72B-Chat
                - deepseek-ai/deepseek-llm-67b-chat
                - lmsys/vicuna-7b-v1.5
                - microsoft/WizardLM-2-8x22B
                - togethercomputer/Llama-3-8b-chat-hf-int8
                - mistralai/Mistral-7B-Instruct-v0.3
                - Qwen/Qwen1.5-110B-Chat
                - meta-llama/Llama-2-13b-chat-hf
                - google/gemma-2-27b-it
                - zero-one-ai/Yi-34B-Chat
                - meta-llama/Meta-Llama-3-70B-Instruct-Turbo
                - meta-llama/Meta-Llama-3-70B-Instruct-Lite
                - google/gemma-2-9b-it
                - meta-llama/Llama-3-8b-chat-hf
                - mistralai/Mixtral-8x7B-Instruct-v0.1
                - codellama/CodeLlama-70b-hf
                - codellama/CodeLlama-70b-Instruct-hf
                - meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo
                - databricks/dbrx-instruct
                - meta-llama/Meta-Llama-3-8B-Instruct-Turbo
                - cognitivecomputations/dolphin-2.5-mixtral-8x7b
                - mistralai/Mixtral-8x22B-Instruct-v0.1
                - meta-llama/Llama-2-70b-hf
                - meta-llama/Meta-Llama-3-8B-Instruct-Lite
                - meta-llama/Llama-2-70b-chat-hf
                - codellama/CodeLlama-7b-Python-hf
                - Meta-Llama/Llama-Guard-7b
                - togethercomputer/Koala-7B
                - Qwen/Qwen2-1.5B-Instruct
                - Qwen/Qwen2-7B-Instruct
                - NousResearch/Nous-Hermes-13b
                - togethercomputer/guanaco-65b
                - togethercomputer/llama-2-7b
                - huggyllama/llama-7b
                - lmsys/vicuna-7b-v1.3
                - Qwen/Qwen2-72B
                - Phind/Phind-CodeLlama-34B-Python-v1
                - NumbersStation/nsql-llama-2-7B
                - NousResearch/Nous-Hermes-Llama2-70b
                - WizardLM/WizardLM-70B-V1.0
                - huggyllama/llama-65b
                - lmsys/vicuna-13b-v1.5-16k
                - HuggingFaceH4/zephyr-7b-beta
                - togethercomputer/llama-2-13b
                - togethercomputer/CodeLlama-7b-Instruct
                - togethercomputer/guanaco-13b
                - togethercomputer/CodeLlama-34b-Python
                - togethercomputer/CodeLlama-34b-Instruct
                - togethercomputer/CodeLlama-34b
                - togethercomputer/llama-2-70b
                - codellama/CodeLlama-13b-hf
                - Qwen/Qwen2-7B
                - Qwen/Qwen2-1.5B
                - togethercomputer/CodeLlama-13b-Instruct
                - togethercomputer/llama-2-13b-chat
                - lmsys/vicuna-13b-v1.3
                - huggyllama/llama-13b
                - huggyllama/llama-30b
                - togethercomputer/guanaco-33b
                - togethercomputer/Koala-13B
                - togethercomputer/llama-2-7b-chat
                - togethercomputer/SOLAR-10.7B-Instruct-v1.0-int4
                - togethercomputer/guanaco-7b
                - EleutherAI/llemma_7b
                - meta-llama/Meta-Llama-3-8B-Instruct
                - codellama/CodeLlama-34b-hf
                - meta-llama/Meta-Llama-3-70B-Instruct
                - meta-llama/Llama-3-70b-hf
                - togethercomputer/CodeLlama-7b-Python
                - NousResearch/Hermes-2-Theta-Llama-3-70B
                - carson/ml318bit
                - togethercomputer/CodeLlama-13b-Python
                - codellama/CodeLlama-7b-hf
                - togethercomputer/llama-2-70b-chat
                - carson/ml31405bit
                - carson/ml3170bit
                - carson/mlg38b
                - carson/ml318br
                - meta-llama/Meta-Llama-3.1-8B-Reference
                - gradientai/Llama-3-70B-Instruct-Gradient-1048k
                - meta-llama/Meta-Llama-3.1-70B-Instruct-Reference
                - meta-llama/Meta-Llama-3.1-70B-Reference
            messages:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - system
                      content:
                        type: string
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - user
                      content:
                        anyOf:
                          - type: string
                          - type: array
                            items:
                              oneOf:
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - text
                                    text:
                                      type: string
                                  required:
                                    - type
                                    - text
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - image_url
                                    image_url:
                                      type: object
                                      properties:
                                        url:
                                          type: string
                                          format: uri
                                        detail:
                                          type: string
                                          enum:
                                            - low
                                            - high
                                            - auto
                                      required:
                                        - url
                                  required:
                                    - type
                                    - image_url
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - assistant
                      content:
                        type: string
                      tool_calls:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                              enum:
                                - function
                            function:
                              type: object
                              properties:
                                name:
                                  type: string
                                arguments:
                                  type: string
                              required:
                                - name
                          required:
                            - id
                            - type
                            - function
                    required:
                      - role
                    additionalProperties: false
            max_tokens:
              type: number
              minimum: 1
              default: 512
            stop:
              type: array
              items:
                type: string
            stream:
              type: boolean
              default: false
            stream_options:
              type: object
              properties:
                include_usage:
                  type: boolean
              required:
                - include_usage
            top_p:
              type: number
              minimum: 0.1
              maximum: 1
            top_k:
              type: number
            temperature:
              type: number
            repetition_penalty:
              type: number
            logprobs:
              type: number
              minimum: 0
              maximum: 1
            echo:
              type: boolean
            min_p:
              type: number
              minimum: 0
              maximum: 1
            presence_penalty:
              type: number
              minimum: -2
              maximum: 2
            frequency_penalty:
              type: number
              minimum: -2
              maximum: 2
            logit_bias:
              type: object
              additionalProperties:
                type: number
                minimum: -100
                maximum: 100
            tools:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - function
                  function:
                    type: object
                    properties:
                      description:
                        type: string
                      name:
                        type: string
                      parameters:
                        nullable: true
                    required:
                      - description
                      - name
                required:
                  - type
                  - function
            tool_choice:
              anyOf:
                - type: string
                  enum:
                    - none
                    - auto
                - type: object
                  properties:
                    name:
                      type: string
                  required:
                    - name
            response_format:
              oneOf:
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - json_object
                    schema:
                      type: object
                      additionalProperties:
                        nullable: true
                  required:
                    - type
                    - schema
                  additionalProperties: false
          required:
            - model
            - messages
        - type: object
          properties:
            provider:
              type: string
              enum:
                - anthropic
              default: anthropic
            model:
              type: string
              enum:
                - claude-3-opus-20240229
                - claude-3-sonnet-20240229
                - claude-3-haiku-20240307
                - claude-3-5-sonnet-20240620
            messages:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - user
                      content:
                        anyOf:
                          - type: string
                          - type: array
                            items:
                              oneOf:
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - text
                                    text:
                                      type: string
                                  required:
                                    - type
                                    - text
                                  additionalProperties: false
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - image
                                    source:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - base64
                                        media_type:
                                          type: string
                                          enum:
                                            - image/jpeg
                                            - image/png
                                            - image/gif
                                            - image/webp
                                        data:
                                          type: string
                                      required:
                                        - type
                                        - media_type
                                        - data
                                      additionalProperties: false
                                  required:
                                    - type
                                    - source
                                  additionalProperties: false
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - tool_use
                                    id:
                                      type: string
                                    name:
                                      type: string
                                    input:
                                      type: object
                                      additionalProperties:
                                        nullable: true
                                  required:
                                    - type
                                    - id
                                    - name
                                    - input
                                  additionalProperties: false
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - tool_result
                                    tool_use_id:
                                      type: string
                                    is_error:
                                      type: boolean
                                    content:
                                      anyOf:
                                        - type: string
                                        - oneOf:
                                            - type: object
                                              properties:
                                                type:
                                                  type: string
                                                  enum:
                                                    - text
                                                text:
                                                  type: string
                                              required:
                                                - type
                                                - text
                                              additionalProperties: false
                                            - type: object
                                              properties:
                                                type:
                                                  type: string
                                                  enum:
                                                    - image
                                                source:
                                                  type: object
                                                  properties:
                                                    type:
                                                      type: string
                                                      enum:
                                                        - base64
                                                    media_type:
                                                      type: string
                                                      enum:
                                                        - image/jpeg
                                                        - image/png
                                                        - image/gif
                                                        - image/webp
                                                    data:
                                                      type: string
                                                  required:
                                                    - type
                                                    - media_type
                                                    - data
                                                  additionalProperties: false
                                              required:
                                                - type
                                                - source
                                              additionalProperties: false
                                  required:
                                    - type
                                    - tool_use_id
                                  additionalProperties: false
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - assistant
                      content:
                        type: string
                    required:
                      - role
                      - content
                    additionalProperties: false
            stop_sequences:
              type: array
              items:
                type: string
            max_tokens:
              type: number
              minimum: 1
              default: 512
            stream:
              type: boolean
              default: false
            frequency_penalty:
              type: number
            top_p:
              type: number
            top_k:
              type: number
            temperature:
              type: number
              minimum: 0
              maximum: 1
            tools:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - function
                  function:
                    type: object
                    properties:
                      description:
                        type: string
                      name:
                        type: string
                      parameters:
                        nullable: true
                    required:
                      - description
                      - name
                required:
                  - type
                  - function
            tool_choice:
              anyOf:
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - auto
                        - any
                  required:
                    - type
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - tool
                    name:
                      type: string
                  required:
                    - type
                    - name
            system:
              type: string
          required:
            - model
            - messages
        - type: object
          properties:
            provider:
              type: string
              enum:
                - openai
              default: openai
            model:
              type: string
              enum:
                - gpt-4-turbo
                - gpt-4-turbo-2024-04-09
                - gpt-4
                - gpt-4-32k
                - gpt-4-0125-preview
                - gpt-4-1106-preview
                - gpt-4-vision-preview
                - gpt-3.5-turbo-0125
                - gpt-3.5-turbo-instruct
                - gpt-3.5-turbo-1106
                - gpt-3.5-turbo-0613
                - gpt-3.5-turbo-16k-0613
                - gpt-3.5-turbo-0301
                - gpt-4o
                - chatgpt-4o-latest
                - gpt-4o-2024-08-06
                - gpt-4o-2024-05-13
                - gpt-4o-mini-2024-07-18
                - gpt-4o-mini
            frequency_penalty:
              type: number
              minimum: -2
              maximum: 2
            logit_bias:
              type: object
              additionalProperties:
                type: number
                minimum: -100
                maximum: 100
            logprobs:
              type: boolean
            top_logprobs:
              type: number
              minimum: 0
              maximum: 20
            max_tokens:
              type: number
              minimum: 1
              default: 512
            presence_penalty:
              type: number
              minimum: -2
              maximum: 2
            messages:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - system
                      content:
                        type: string
                      name:
                        type: string
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - user
                      content:
                        anyOf:
                          - type: string
                          - type: array
                            items:
                              oneOf:
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - text
                                    text:
                                      type: string
                                  required:
                                    - type
                                    - text
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - image_url
                                    image_url:
                                      type: object
                                      properties:
                                        url:
                                          type: string
                                          format: uri
                                        detail:
                                          type: string
                                          enum:
                                            - low
                                            - high
                                            - auto
                                      required:
                                        - url
                                  required:
                                    - type
                                    - image_url
                      name:
                        type: string
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - tool
                      content:
                        type: string
                      tool_call_id:
                        type: string
                    required:
                      - role
                      - content
                      - tool_call_id
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - function
                      content:
                        type: string
                      name:
                        type: string
                    required:
                      - role
                      - content
                      - name
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - assistant
                      content:
                        type: string
                      tool_calls:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                              enum:
                                - function
                            function:
                              type: object
                              properties:
                                name:
                                  type: string
                                arguments:
                                  type: string
                              required:
                                - name
                          required:
                            - id
                            - type
                            - function
                      refusal:
                        type: string
                    required:
                      - role
                    additionalProperties: false
            stream:
              type: boolean
              default: false
            stream_options:
              type: object
              properties:
                include_usage:
                  type: boolean
              required:
                - include_usage
            top_p:
              type: number
              minimum: 0.1
              maximum: 1
            temperature:
              type: number
              minimum: 0
              maximum: 2
            stop:
              anyOf:
                - type: string
                - type: array
                  items:
                    type: string
            tools:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - function
                  function:
                    type: object
                    properties:
                      description:
                        type: string
                      name:
                        type: string
                      parameters:
                        nullable: true
                    required:
                      - description
                      - name
                    additionalProperties: false
                required:
                  - type
                  - function
                additionalProperties: false
            tool_choice:
              anyOf:
                - type: string
                  enum:
                    - none
                    - auto
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - function
                    function:
                      type: object
                      properties:
                        description:
                          type: string
                        name:
                          type: string
                        parameters:
                          nullable: true
                      required:
                        - description
                        - name
                      additionalProperties: false
                  required:
                    - type
                    - function
                  additionalProperties: false
            response_format:
              oneOf:
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - text
                  required:
                    - type
                  additionalProperties: false
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - json_object
                  required:
                    - type
                  additionalProperties: false
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - json_schema
                    json_schema:
                      type: object
                      properties:
                        name:
                          type: string
                        schema:
                          type: object
                          additionalProperties:
                            nullable: true
                        strict:
                          type: boolean
                        description:
                          type: string
                      required:
                        - name
                      additionalProperties: false
                  required:
                    - type
                    - json_schema
                  additionalProperties: false
          required:
            - model
            - messages
        - type: object
          properties:
            provider:
              type: string
              enum:
                - gemini
              default: gemini
            model:
              type: string
              enum:
                - gemini-1.5-flash
                - gemini-1.5-pro
                - gemini-pro
            frequency_penalty:
              type: number
              minimum: -2
              maximum: 2
            logit_bias:
              type: object
              additionalProperties:
                type: number
                minimum: -100
                maximum: 100
            logprobs:
              type: boolean
            top_logprobs:
              type: number
              minimum: 0
              maximum: 20
            max_tokens:
              type: number
              minimum: 1
              default: 512
            presence_penalty:
              type: number
              minimum: -2
              maximum: 2
            messages:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - system
                      content:
                        type: string
                      name:
                        type: string
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - user
                      content:
                        anyOf:
                          - type: string
                          - type: array
                            items:
                              oneOf:
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - text
                                    text:
                                      type: string
                                  required:
                                    - type
                                    - text
                                - type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - image_url
                                    image_url:
                                      type: object
                                      properties:
                                        url:
                                          type: string
                                          format: uri
                                        detail:
                                          type: string
                                          enum:
                                            - low
                                            - high
                                            - auto
                                      required:
                                        - url
                                  required:
                                    - type
                                    - image_url
                      name:
                        type: string
                    required:
                      - role
                      - content
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - tool
                      content:
                        type: string
                      tool_call_id:
                        type: string
                    required:
                      - role
                      - content
                      - tool_call_id
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - function
                      content:
                        type: string
                      name:
                        type: string
                    required:
                      - role
                      - content
                      - name
                    additionalProperties: false
                  - type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - assistant
                      content:
                        type: string
                      tool_calls:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                              enum:
                                - function
                            function:
                              type: object
                              properties:
                                name:
                                  type: string
                                arguments:
                                  type: string
                              required:
                                - name
                              additionalProperties: false
                          required:
                            - id
                            - type
                            - function
                      refusal:
                        type: string
                    required:
                      - role
                    additionalProperties: false
            stream:
              type: boolean
              default: false
            top_p:
              type: number
              minimum: 0.1
              maximum: 1
            temperature:
              type: number
              minimum: 0
              maximum: 2
            stop:
              anyOf:
                - type: string
                - type: array
                  items:
                    type: string
            tools:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - function
                  function:
                    type: object
                    properties:
                      description:
                        type: string
                      name:
                        type: string
                      parameters:
                        type: object
                        additionalProperties:
                          nullable: true
                    required:
                      - description
                      - name
                    additionalProperties: false
                required:
                  - type
                  - function
                additionalProperties: false
            tool_choice:
              anyOf:
                - type: string
                  enum:
                    - none
                    - auto
                    - required
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - function
                    function:
                      type: object
                      properties:
                        description:
                          type: string
                        name:
                          type: string
                        parameters:
                          type: object
                          additionalProperties:
                            nullable: true
                      required:
                        - description
                        - name
                      additionalProperties: false
                  required:
                    - type
                    - function
                  additionalProperties: false
          required:
            - model
            - messages
    BaseCompleteChatResultDTO:
      anyOf:
        - $ref: '#/components/schemas/ChatCompletionDTO'
        - type: array
          items:
            $ref: '#/components/schemas/ChatCompletionChunkDTO'
    ChatCompletionDTO:
      type: object
      properties:
        id:
          type: string
        choices:
          type: array
          items:
            $ref: '#/components/schemas/ChatComoletionChoiceLogprobsDTO'
        created:
          type: number
        model:
          type: string
        object:
          type: string
          enum:
            - chat.completion
        service_tier:
          type: string
          nullable: true
          enum:
            - scale
            - default
        system_fingerprint:
          type: string
          nullable: true
        usage:
          $ref: '#/components/schemas/ChatCompletionUsageDTO'
      required:
        - id
        - choices
        - created
        - model
        - object
    ChatComoletionChoiceLogprobsDTO:
      type: object
      properties:
        finish_reason:
          type: string
          enum:
            - stop
            - length
            - tool_calls
            - content_filter
            - function_call
        index:
          type: number
        logprobs:
          $ref: '#/components/schemas/ChatCompletionChoiceLogprobsDTO'
        message:
          type: object
          properties:
            role:
              type: string
              enum:
                - system
                - user
                - assistant
                - tool
            content:
              type: string
          required:
            - role
            - content
      required:
        - finish_reason
        - index
        - logprobs
        - message
    ChatCompletionChoiceLogprobsDTO:
      type: object
      properties:
        content:
          type: array
          nullable: true
          items:
            nullable: true
        refusal:
          type: array
          nullable: true
          items:
            nullable: true
      required:
        - content
        - refusal
    ChatCompletionUsageDTO:
      type: object
      properties:
        completion_tokens:
          type: number
        prompt_tokens:
          type: number
        total_tokens:
          type: number
      required:
        - completion_tokens
        - prompt_tokens
        - total_tokens
    ChatCompletionChunkDTO:
      type: object
      properties:
        id:
          type: string
        choices:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionChunkChoiceDTO'
        created:
          type: number
        model:
          type: string
        object:
          type: string
          enum:
            - chat.completion.chunk
        service_tier:
          type: string
          nullable: true
          enum:
            - scale
            - default
        system_fingerprint:
          type: string
        usage:
          nullable: true
        $omit:
          type: boolean
      required:
        - id
        - choices
        - created
        - model
        - object
    ChatCompletionChunkChoiceDTO:
      type: object
      properties:
        delta:
          $ref: '#/components/schemas/ChatCompletionChunkDeltaDTO'
        finish_reason:
          type: string
          nullable: true
          enum:
            - stop
            - length
            - tool_calls
            - content_filter
            - function_call
        index:
          type: number
        logprobs:
          $ref: '#/components/schemas/ChatCompletionChoiceLogprobsDTO'
      required:
        - delta
        - finish_reason
        - index
    ChatCompletionChunkDeltaDTO:
      type: object
      properties:
        content:
          type: string
          nullable: true
        function_call:
          $ref: '#/components/schemas/ChatCompletionFunctionDTO'
        refusal:
          type: string
          nullable: true
        role:
          type: string
          enum:
            - system
            - user
            - assistant
            - tool
        tool_calls:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionToolCallDTO'
    ChatCompletionFunctionDTO:
      type: object
      properties:
        arguments:
          type: string
        name:
          type: string
    ChatCompletionToolCallDTO:
      type: object
      properties:
        index:
          type: number
        id:
          type: string
        function:
          $ref: '#/components/schemas/ChatCompletionFunctionDTO'
        type:
          type: string
          enum:
            - function
      required:
        - index
    CompleteLanguageDTO:
      type: object
      properties:
        prompt:
          type: string
          description: A string providing context for the model to complete
        model:
          type: string
          description: The name of the model to query
          example: mistralai/Mixtral-8x7B-v0.1
        max_tokens:
          type: number
          description: The maximum number of tokens to generate
          minimum: 1
        stop:
          description: >-
            A list of string sequences that will truncate (stop) inference text
            output
          type: array
          items:
            type: string
        temperature:
          type: number
          description: Determines the degree of randomness in the response
          minimum: 0
          maximum: 2
        top_p:
          type: number
          description: The top_p (nucleus) parameter for dynamic token choice adjustment
          minimum: 0
          maximum: 1
        top_k:
          type: number
          description: >-
            The top_k parameter to limit the number of choices for the next
            predicted token
          minimum: 1
        repetition_penalty:
          type: number
          description: >-
            Controls the diversity of generated text by reducing the likelihood
            of repeated sequences
          minimum: 0
        stream:
          type: boolean
          description: >-
            If set, tokens are returned as Server-Sent Events as they are made
            available
        logprobs:
          type: number
          description: >-
            Determines the number of most likely tokens to return at each token
            position
          minimum: 0
          maximum: 1
        echo:
          type: boolean
          description: >-
            If set, the response will contain the prompt, and will also return
            prompt logprobs if set with logprobs
        'n':
          type: number
          description: Number of generations to return
          minimum: 1
          maximum: 128
        safety_model:
          type: string
          description: The name of the safety model to use
          example: safety_model_nan
        min_p:
          type: number
          description: An alternative to temperature, number between 0 and 1
          minimum: 0
          maximum: 1
        presence_penalty:
          type: number
          description: Increases the likelihood of a model talking about new topics
          minimum: -2
          maximum: 2
        frequency_penalty:
          type: number
          description: Decreases the likelihood of repeating tokens mentioned prior
          minimum: -2
          maximum: 2
        logit_bias:
          type: object
          description: >-
            Allows adjusting the likelihood of specific tokens appearing in the
            generated output
          additionalProperties:
            type: number
      required:
        - prompt
        - model
    LanguageCompletionDTO:
      type: object
      properties:
        id:
          type: string
        choices:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              finish_reason:
                type: string
              logprobs:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      type: string
                  token_logprobs:
                    type: array
                    items:
                      type: number
                required:
                  - tokens
                  - token_logprobs
            required:
              - text
              - finish_reason
              - logprobs
        prompt:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              logprobs:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      type: string
                  token_logprobs:
                    type: array
                    items:
                      type: number
                required:
                  - tokens
                  - token_logprobs
            required:
              - text
              - logprobs
        usage:
          type: object
          properties:
            prompt_tokens:
              type: number
            completion_tokens:
              type: number
            total_tokens:
              type: number
          required:
            - prompt_tokens
            - completion_tokens
            - total_tokens
        created:
          type: number
        model:
          type: string
        object:
          type: string
          enum:
            - text_completion
      required:
        - id
        - choices
        - prompt
        - usage
        - created
        - model
        - object
    BaseGenerateImageDTO:
      anyOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
                - openai
              default: openai
            prompt:
              type: string
              maxLength: 4000
            model:
              type: string
              enum:
                - dall-e-3
                - dall-e-2
              default: dall-e-2
            'n':
              type: number
              default: 1
            quality:
              type: string
              enum:
                - hd
                - standard
              default: standard
            response_format:
              type: string
              nullable: true
              enum:
                - url
                - b64_json
              default: url
            size:
              type: string
              enum:
                - 256x256
                - 512x512
                - 1024x1024
                - 1792x1024
                - 1024x1792
              default: 1024x1024
            style:
              type: string
              nullable: true
              enum:
                - vivid
                - natural
          required:
            - prompt
          additionalProperties: false
        - type: object
          properties:
            provider:
              type: string
              enum:
                - open-source
              default: open-source
            prompt:
              type: string
              maxLength: 4000
            model:
              type: string
              enum:
                - stabilityai/stable-diffusion-xl-base-1.0
            steps:
              type: string
              default: '25'
            'n':
              type: number
              default: 1
            size:
              type: string
              enum:
                - 512x512
                - 1024x1024
              default: 1024x1024
          required:
            - prompt
            - model
          additionalProperties: false
        - oneOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - fal-ai
                  default: fal-ai
                prompt:
                  type: string
                  maxLength: 4000
                num_images:
                  type: number
                  default: 1
                enable_safety_checker:
                  type: boolean
                  default: true
                image_size:
                  type: string
                  enum:
                    - square_hd
                    - square
                    - portrait_4_3
                    - portrait_16_9
                    - landscape_4_3
                    - landscape_16_9
                  default: landscape_4_3
                sync_mode:
                  type: boolean
                  default: false
                model:
                  type: string
                  enum:
                    - flux/schnell
              required:
                - prompt
                - model
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - fal-ai
                  default: fal-ai
                prompt:
                  type: string
                  maxLength: 4000
                num_images:
                  type: number
                  default: 1
                enable_safety_checker:
                  type: boolean
                  default: true
                image_size:
                  type: string
                  enum:
                    - square_hd
                    - square
                    - portrait_4_3
                    - portrait_16_9
                    - landscape_4_3
                    - landscape_16_9
                  default: landscape_4_3
                sync_mode:
                  type: boolean
                  default: false
                model:
                  type: string
                  enum:
                    - flux-pro
                guidance_scale:
                  type: number
                  default: 3.5
                safety_tolerance:
                  type: string
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                  default: '2'
              required:
                - prompt
                - model
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - fal-ai
                  default: fal-ai
                prompt:
                  type: string
                  maxLength: 4000
                num_images:
                  type: number
                  default: 1
                enable_safety_checker:
                  type: boolean
                  default: true
                image_size:
                  type: string
                  enum:
                    - square_hd
                    - square
                    - portrait_4_3
                    - portrait_16_9
                    - landscape_4_3
                    - landscape_16_9
                  default: landscape_4_3
                sync_mode:
                  type: boolean
                  default: false
                model:
                  type: string
                  enum:
                    - flux/dev
                guidance_scale:
                  type: number
                  default: 3.5
              required:
                - prompt
                - model
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - fal-ai
                  default: fal-ai
                prompt:
                  type: string
                  maxLength: 4000
                num_images:
                  type: number
                  default: 1
                enable_safety_checker:
                  type: boolean
                  default: true
                image_size:
                  type: string
                  enum:
                    - square_hd
                    - square
                    - portrait_4_3
                    - portrait_16_9
                    - landscape_4_3
                    - landscape_16_9
                  default: landscape_4_3
                sync_mode:
                  type: boolean
                  default: false
                model:
                  type: string
                  enum:
                    - flux/dev/image-to-image
                image_url:
                  type: string
                  format: uri
                strength:
                  type: number
                  default: 0.95
                guidance_scale:
                  type: number
                  default: 3.5
              required:
                - prompt
                - model
                - image_url
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - fal-ai
                  default: fal-ai
                prompt:
                  type: string
                  maxLength: 4000
                num_images:
                  type: number
                  default: 1
                enable_safety_checker:
                  type: boolean
                  default: true
                image_size:
                  type: string
                  enum:
                    - square_hd
                    - square
                    - portrait_4_3
                    - portrait_16_9
                    - landscape_4_3
                    - landscape_16_9
                  default: landscape_4_3
                sync_mode:
                  type: boolean
                  default: false
                model:
                  type: string
                  enum:
                    - stable-diffusion-v3-medium
                negative_prompt:
                  type: string
                prompt_expansion:
                  type: boolean
                guidance_scale:
                  type: number
                  default: 3.5
              required:
                - prompt
                - model
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - fal-ai
                  default: fal-ai
                prompt:
                  type: string
                  maxLength: 4000
                num_images:
                  type: number
                  default: 1
                enable_safety_checker:
                  type: boolean
                  default: true
                image_size:
                  type: string
                  enum:
                    - square_hd
                    - square
                    - portrait_4_3
                    - portrait_16_9
                    - landscape_4_3
                    - landscape_16_9
                  default: landscape_4_3
                sync_mode:
                  type: boolean
                  default: false
                model:
                  type: string
                  enum:
                    - flux-realism
                guidance_scale:
                  type: number
                  default: 3.5
              required:
                - prompt
                - model
    BaseGenerateImageResultDTO:
      anyOf:
        - $ref: '#/components/schemas/GeneratedImageResponseDTO'
        - $ref: '#/components/schemas/FalAIGenerateImageResponseDTO'
    GeneratedImageResponseDTO:
      type: object
      properties:
        created:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/GeneratedImageDTO'
      required:
        - created
        - data
    GeneratedImageDTO:
      type: object
      properties:
        b64_json:
          type: string
        revised_prompt:
          type: string
        url:
          type: string
    FalAIGenerateImageResponseDTO:
      type: object
      properties:
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                format: uri
              width:
                type: number
              height:
                type: number
              content_type:
                type: string
            required:
              - url
              - width
              - height
              - content_type
        timings:
          type: object
          properties:
            inference:
              type: number
          required:
            - inference
        seed:
          type: number
        has_nsfw_concepts:
          type: array
          items:
            type: boolean
        prompt:
          type: string
      required:
        - images
        - timings
        - seed
        - has_nsfw_concepts
        - prompt
    GenerateImageResultDTO:
      type: object
      properties:
        status:
          type: string
        prompt:
          type: array
          items:
            type: string
        model:
          type: string
        model_owner:
          type: string
        tags:
          type: object
          additionalProperties:
            nullable: true
        num_returns:
          type: number
        args:
          type: object
          properties:
            model:
              type: string
            prompt:
              type: string
            'n':
              type: number
            steps:
              type: number
            size:
              type: string
          required:
            - model
            - prompt
            - 'n'
            - steps
            - size
        subjobs:
          type: array
          items:
            nullable: true
        output:
          type: object
          properties:
            choices:
              type: array
              items:
                type: object
                properties:
                  image_base64:
                    type: string
                required:
                  - image_base64
          required:
            - choices
      required:
        - status
        - prompt
        - model
        - model_owner
        - tags
        - num_returns
        - args
        - subjobs
        - output
    APIKey:
      type: object
      properties:
        key_id:
          type: number
        created_at:
          type: string
        updated_at:
          type: string
        key:
          type: string
        status:
          type: string
          enum:
            - active
            - disabled
        user_id:
          type: number
      required:
        - key_id
        - created_at
        - updated_at
        - key
        - status
        - user_id
    BaseCreateEmbeddingsDTO:
      oneOf:
        - type: object
          properties:
            model:
              type: string
              enum:
                - text-embedding-3-small
                - text-embedding-3-large
                - text-embedding-ada-002
            input:
              anyOf:
                - type: string
                  minLength: 1
                - type: array
                  items:
                    type: string
                  minItems: 1
            encoding_format:
              type: string
              enum:
                - float
                - base64
              default: float
            dimensions:
              type: number
          required:
            - model
            - input
          additionalProperties: false
        - type: object
          properties:
            input:
              anyOf:
                - type: string
                  minLength: 1
                  maxLength: 8000
                - type: array
                  items:
                    type: string
                    maxLength: 800
            model:
              type: string
              enum:
                - voyage-large-2-instruct
                - voyage-finance-2
                - voyage-multilingual-2
                - voyage-law-2
                - voyage-code-2
                - voyage-large-2
                - voyage-2
            input_type:
              type: string
              enum:
                - document
          required:
            - input
            - model
            - input_type
          additionalProperties: false
        - type: object
          properties:
            input:
              type: string
              minLength: 1
              maxLength: 3000
            model:
              type: string
              enum:
                - togethercomputer/m2-bert-80M-2k-retrieval
                - togethercomputer/m2-bert-80M-8k-retrieval
                - togethercomputer/m2-bert-80M-32k-retrieval
                - BAAI/bge-large-en-v1.5
                - BAAI/bge-base-en-v1.5
          required:
            - input
            - model
          additionalProperties: false
        - type: object
          properties:
            model:
              type: string
              enum:
                - textembedding-gecko@001
                - textembedding-gecko@003
                - textembedding-gecko-multilingual@001
                - text-multilingual-embedding-002
            input:
              anyOf:
                - type: string
                  minLength: 1
                - type: array
                  items:
                    type: string
                  minItems: 1
            dimensions:
              type: number
              nullable: true
            auto_truncate:
              type: boolean
              default: true
            task_type:
              type: string
              enum:
                - RETRIEVAL_QUERY
                - RETRIEVAL_DOCUMENT
                - SEMANTIC_SIMILARITY
                - CLASSIFICATION
                - CLUSTERING
                - QUESTION_ANSWERING
                - FACT_VERIFICATION
            title:
              type: string
          required:
            - model
            - input
          additionalProperties: false
    BaseCreateEmbeddingsResultDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddingDTO'
        model:
          type: string
        object:
          type: string
          enum:
            - list
        usage:
          $ref: '#/components/schemas/EmbeddingUsageDTO'
      required:
        - data
        - model
        - object
        - usage
    EmbeddingDTO:
      type: object
      properties:
        embedding:
          type: array
          items:
            type: number
        index:
          type: number
        object:
          type: string
          enum:
            - embedding
      required:
        - embedding
        - index
        - object
    EmbeddingUsageDTO:
      type: object
      properties:
        prompt_tokens:
          type: number
        total_tokens:
          type: number
      required:
        - prompt_tokens
        - total_tokens
    RunDTO:
      type: object
      properties:
        id:
          type: string
        assistant_id:
          type: string
        cancelled_at:
          type: number
          nullable: true
        completed_at:
          type: number
          nullable: true
        created_at:
          type: number
        expires_at:
          type: number
          nullable: true
        failed_at:
          type: number
          nullable: true
        incomplete_details:
          $ref: '#/components/schemas/RunIncompleteDetailsDTO'
        instructions:
          type: string
        last_error:
          $ref: '#/components/schemas/RunLastErrorDTO'
        max_completion_tokens:
          type: number
          nullable: true
        max_prompt_tokens:
          type: number
          nullable: true
        metadata:
          nullable: true
        model:
          type: string
        object:
          type: string
          enum:
            - thread.run
        parallel_tool_calls:
          type: boolean
        required_action:
          type: object
          nullable: true
          properties:
            submit_tool_outputs:
              $ref: '#/components/schemas/RunRequiredActionSubmitToolOutputsDTO'
            type:
              type: string
              enum:
                - submit_tool_outputs
          required:
            - submit_tool_outputs
            - type
        response_format:
          nullable: true
        started_at:
          type: number
          nullable: true
        status:
          type: string
          enum:
            - queued
            - in_progress
            - requires_action
            - cancelling
            - cancelled
            - failed
            - completed
            - incomplete
            - expired
        thread_id:
          type: string
        tool_choice:
          nullable: true
        tools:
          type: array
          items:
            nullable: true
        truncation_strategy:
          $ref: '#/components/schemas/RunTruncationStrategyDTO'
        usage:
          $ref: '#/components/schemas/RunUsageDTO'
        temperature:
          type: number
          nullable: true
        top_p:
          type: number
          nullable: true
      required:
        - id
        - assistant_id
        - cancelled_at
        - completed_at
        - created_at
        - expires_at
        - failed_at
        - incomplete_details
        - instructions
        - last_error
        - max_completion_tokens
        - max_prompt_tokens
        - model
        - object
        - parallel_tool_calls
        - required_action
        - started_at
        - status
        - thread_id
        - tools
        - truncation_strategy
        - usage
    RunIncompleteDetailsDTO:
      type: object
      properties:
        reason:
          type: string
          enum:
            - max_completion_tokens
            - max_prompt_tokens
    RunLastErrorDTO:
      type: object
      properties:
        code:
          type: string
          enum:
            - server_error
            - rate_limit_exceeded
            - invalid_prompt
        message:
          type: string
      required:
        - code
        - message
    RunRequiredActionSubmitToolOutputsDTO:
      type: object
      properties:
        tool_calls:
          type: array
          items:
            nullable: true
      required:
        - tool_calls
    RunTruncationStrategyDTO:
      type: object
      properties:
        type:
          type: string
          enum:
            - auto
            - last_messages
        last_messages:
          type: number
          nullable: true
      required:
        - type
    RunUsageDTO:
      type: object
      properties:
        completion_tokens:
          type: number
        prompt_tokens:
          type: number
        total_tokens:
          type: number
      required:
        - completion_tokens
        - prompt_tokens
        - total_tokens
    CreateThreadRunDTO:
      type: object
      properties:
        assistant_id:
          type: string
        stream:
          type: boolean
        metadata:
          type: object
      required:
        - assistant_id
    UpdateThreadRunDTO:
      type: object
      properties:
        metadata:
          type: object
    MessageResponseDTO:
      type: object
      properties:
        id:
          type: string
        assistant_id:
          type: string
          nullable: true
        attachments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MessageAttachmentDTO'
        completed_at:
          type: number
          nullable: true
        content:
          type: array
          items:
            $ref: '#/components/schemas/MessageContentDTO'
        created_at:
          type: number
        incomplete_at:
          type: number
          nullable: true
        incomplete_details:
          $ref: '#/components/schemas/MessageIncompleteDetailsDTO'
        metadata:
          nullable: true
        object:
          type: string
          enum:
            - thread.message
        role:
          anyOf:
            - type: string
              enum:
                - user
            - type: string
              enum:
                - assistant
        run_id:
          type: string
          nullable: true
        status:
          anyOf:
            - type: string
              enum:
                - in_progress
            - type: string
              enum:
                - incomplete
            - type: string
              enum:
                - completed
        thread_id:
          type: string
      required:
        - id
        - assistant_id
        - attachments
        - completed_at
        - content
        - created_at
        - incomplete_at
        - incomplete_details
        - object
        - role
        - run_id
        - status
        - thread_id
    MessageAttachmentDTO:
      type: object
      properties:
        file_id:
          type: string
        tools:
          type: array
          items:
            nullable: true
    MessageContentDTO:
      anyOf:
        - $ref: '#/components/schemas/MessageTextContentBlockDTO'
        - $ref: '#/components/schemas/MessageRefusalContentBlockDTO'
    MessageTextContentBlockDTO:
      type: object
      properties:
        text:
          $ref: '#/components/schemas/MessageTextDTO'
        type:
          type: string
          enum:
            - text
      required:
        - text
        - type
    MessageTextDTO:
      type: object
      properties:
        annotations:
          type: array
          items:
            nullable: true
        value:
          type: string
      required:
        - annotations
        - value
    MessageRefusalContentBlockDTO:
      type: object
      properties:
        refusal:
          type: string
        type:
          type: string
          enum:
            - refusal
      required:
        - refusal
        - type
    MessageIncompleteDetailsDTO:
      type: object
      properties:
        reason:
          anyOf:
            - type: string
              enum:
                - content_filter
            - type: string
              enum:
                - max_tokens
            - type: string
              enum:
                - run_cancelled
            - type: string
              enum:
                - run_expired
            - type: string
              enum:
                - run_failed
      required:
        - reason
    CreateThreadMessageDTO:
      type: object
      properties:
        role:
          type: string
        content:
          type: string
        metadata:
          type: object
      required:
        - role
        - content
    UpdateThreadMessageDTO:
      type: object
      properties:
        metadata:
          type: object
